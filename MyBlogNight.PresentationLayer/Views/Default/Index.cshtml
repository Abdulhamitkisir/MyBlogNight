﻿@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<Article>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   @*  <div id="wrapper">
        <header class="market-header header">
            <div class="container-fluid">
                @await Component.InvokeAsync("_NavbarComponentPartial")

                
            </div><!-- end container-fluid -->
        </header><!-- end market-header --> *@

@await Component.InvokeAsync("_DefaultLastArtickleComponentPartial")

        <section class="section lb">
            <div class="container">
                <div class="row">
                    <div class="col-lg-8 col-md-12 col-sm-12 col-xs-12">

                        <div class="page-wrapper">
                            @foreach (var item in Model)
                            {
                                    <div class="blog-custom-build">
                                    <div class="blog-box wow fadeIn">
                                        <div class="post-media">
                                    <a href="/Default/ArticleDetail/@item.ArticleId" title="">
                                                <img src="@item.CoverImageUrl" alt="" class="img-fluid">
                                                <div class="hovereffect">
                                                    <span></span>
                                                </div>
                                            </a>

                                        </div>
                                        <div class="blog-meta big-meta text-center">

                                            <h4><a href="/Default/ArticleDetail/@item.ArticleId" title="">@item.Title</a></h4>
                                            @if (item.Detail.Length >= 100)
                                            {
                                        <p class="card-text">@item.Detail.Substring(0, 150)... <a href="/Default/ArticleDetail/@item.ArticleId">Devamini Oku</a></p>
                                            }
                                            else
                                            {
                                        <p>@item.Detail <a href="/Default/ArticleDetail/@item.ArticleId">Devamını Oku</a></p>
                                            }
                                            <small><a title="">Category : @item.Category.CategoryName</a></small>
                                            <small><a title="">@item.CreateDate.ToString("dd-MMM-yyyy")</a></small>
                                            <small><a title="">@item.AppUser.Name @item.AppUser.Surname</a></small>
                                            <small><a title=""><i class="fa fa-eye"></i> @item.ArticleViewCount</a></small>
                                        </div>
                                    </div>
                                </div>
                                
                            }
                        
                        </div>

                        <hr class="invis">

                        <!-- Sayfalama -->

                        <div class="row">
                            <div class="col-md-12">
                                <nav aria-label="Page navigation">
                                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
                               {
                                   LiElementClasses = new[] { "page-item" },
                                   PageClasses = new[] { "page-link" },
                                   UlElementClasses = new[] { "pagination", "justify-content-center" }
                               })
                                </nav>
                            </div>
                        </div>

                        <style>
                            .pagination li {
                                display: inline-block;
                            }

                                .pagination li a, .pagination li span {
                                    background-color: #ffc107;
                                    color: #000;
                                    border: none;
                                    padding: 10px 15px;
                                    margin: 2px;
                                    text-decoration: none;
                                }

                                    .pagination li a:hover {
                                        background-color: #e0a800;
                                    }

                            .pagination .active span {
                                background-color: #e0a800;
                                font-weight: bold;
                            }

                            .pagination .disabled span {
                                background-color: #ffc107;
                                color: #aaa;
                            }
                        </style>


@* 
                        @await Component.InvokeAsync("_DefaultArticleListComponentPartial")
 *@
                        
                 

            
                    </div><!-- end col -->

                    <div class="col-lg-4 col-md-12 col-sm-12 col-xs-12">
                        <div class="sidebar">
                            @await Component.InvokeAsync("_RecentPostComponentPartial")
                            @await Component.InvokeAsync("_CategoryWithArticleCountComponentPartial")
                                              

                        </div><!-- end sidebar -->
                    </div><!-- end col -->
                </div><!-- end row -->
            </div><!-- end container -->
        </section>

      @*   @await Component.InvokeAsync("_FooterComponentPartial") *@

        <div class="dmtop">Scroll to Top</div>

    </div><!-- end wrapper -->
    <!-- Core JavaScript
    ================================================== -->
    <script src="~/markedia/js/jquery.min.js"></script>
    <script src="~/markedia/js/tether.min.js"></script>
    <script src="~/markedia/js/bootstrap.min.js"></script>
    <script src="~/markedia/js/animate.js"></script>
    <script src="~/markedia/js/custom.js"></script>
    <script>
        document.getElementById('btnAlert').addEventListener('click', function () {
            Swal.fire({
                title: 'Success!',
                text: "Newsletter subscription created ",
                icon: 'success', // Başarı mesajı için "success" simgesi
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'Ok'
            });
        });
    </script>
